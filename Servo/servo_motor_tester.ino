#include <Arduino.h>
#include <Wire.h>
#include <U8g2lib.h>
#include <ESP32Servo.h>

// OLED (SH1106 128x64 I2C)
U8G2_SH1106_128X64_NONAME_F_HW_I2C u8g2(U8G2_R0);

// Servo
Servo myservo;
#define SERVO_PIN 2

// Timer
unsigned long startMillis;

// ----------------------------
// Replace with your Logo (Lion Circuits Logo Bitmap)
// ----------------------------
static const unsigned char image_lionc_bits[] = {
  0x00,0xf8,0x1f,0x00,0x00,0xfe,0x3f,0x00,0x80,0xff,0xff,0x00,0xc0,0xdf,0xff,0x03,
  0x20,0xb0,0xf2,0x07,0x00,0x40,0xc6,0x0f,0xf8,0x03,0x06,0x1f,0xfc,0x00,0x1c,0x1e,
  0x7c,0x00,0x30,0x3c,0xfc,0x03,0x20,0x3c,0x7f,0x00,0x0f,0x78,0x3f,0x00,0x00,0x78,
  0x1f,0x00,0x00,0x73,0x1f,0x00,0x00,0xf7,0x0f,0x00,0x00,0xf6,0x8f,0x02,0x00,0xf6,
  0xc7,0x02,0x00,0xf7,0x47,0x22,0x80,0xf7,0x63,0x66,0xf8,0x73,0x63,0xc6,0x01,0x70,
  0xf3,0xce,0x03,0x78,0xf2,0x9c,0x0f,0x78,0xf0,0x3c,0x3f,0x3c,0xf4,0x7d,0xfe,0x3c,
  0xf0,0xf9,0xf9,0x3f,0xe8,0xf3,0xe7,0x1f,0xf0,0xe3,0xff,0x0f,0xe0,0xcf,0xff,0x07,
  0xc0,0x9f,0xff,0x03,0x00,0x3f,0xfe,0x01,0x00,0xfc,0x3c,0x00,0x00,0xd0,0x05,0x00
};

// ----------------------------
// LEFT Eye Bitmap
// ----------------------------
static const unsigned char image_left_bits[] = {
  0x00,0x00,0x20,0x00,0x80,0x3f,0x00,0xf0,0x3f,0x00,0xf8,0x3f,0x00,0xfc,0x1f,0x00,
  0xfe,0x1f,0x80,0xff,0x1f,0xc0,0xff,0x1f,0xe0,0xff,0x1f,0xe0,0xff,0x1f,0xf0,0xff,
  0x1f,0xf0,0xff,0x1f,0xf8,0xff,0x1f,0xf8,0xff,0x1f,0xfc,0xff,0x1f,0xfe,0xff,0x1f,
  0xfc,0xff,0x1f,0xff,0xff,0x1f,0xff,0xff,0x1f,0xff,0xff,0x1f,0xff,0xff,0x1f,0xff,
  0xff,0x1f,0xfe,0xff,0x1f,0xfe,0xff,0x1f,0xff,0xff,0x1f,0xfe,0xff,0x1f,0xfc,0xff,
  0x1f,0xfe,0xff,0x1f,0xfe,0xff,0x1f,0xf8,0xff,0x1f,0xf8,0xff,0x1f,0xf8,0xff,0x1f,
  0xf0,0xff,0x1f,0xf0,0xff,0x1f,0xc0,0xff,0x1f,0xc0,0xff,0x1f,0x80,0xff,0x1f,0x00,
  0xfe,0x1f,0x00,0xfe,0x1f,0x00,0xf8,0x1f,0x00,0xc8,0x1f,0x00,0x00,0x1e
};

// ----------------------------
// RIGHT Eye Bitmap
// ----------------------------
static const unsigned char image_right_bits[] = {
  0x01,0x00,0x00,0x7f,0x00,0x00,0xff,0x03,0x00,0xff,0x07,0x00,0xfe,0x0f,0x00,0xfe,
  0x1f,0x00,0xfe,0x7f,0x00,0xfe,0xff,0x00,0xfe,0xff,0x01,0xfe,0xff,0x01,0xfe,0xff,
  0x03,0xfe,0xff,0x03,0xfe,0xff,0x07,0xfe,0xff,0x07,0xfe,0xff,0x0f,0xfe,0xff,0x1f,
  0xfe,0xff,0x0f,0xfe,0xff,0x3f,0xfe,0xff,0x3f,0xfe,0xff,0x3f,0xfe,0xff,0x3f,0xfe,
  0xff,0x3f,0xfe,0xff,0x1f,0xfe,0xff,0x1f,0xfe,0xff,0x3f,0xfe,0xff,0x1f,0xfe,0xff,
  0x0f,0xfe,0xff,0x1f,0xfe,0xff,0x1f,0xfe,0xff,0x07,0xfe,0xff,0x07,0xfe,0xff,0x07,
  0xfe,0xff,0x03,0xfe,0xff,0x03,0xfe,0xff,0x00,0xfe,0xff,0x00,0xfe,0x7f,0x00,0xfe,
  0x1f,0x00,0xfe,0x1f,0x00,0xfe,0x07,0x00,0xfe,0x04,0x00,0x1e,0x00,0x00
};

// ----------------------------
// Display Screens
// ----------------------------

void drawBootScreen() {
  u8g2.clearBuffer();
  u8g2.setFontMode(1);
  u8g2.setBitmapMode(1);
  u8g2.drawXBM(47, 11, 32, 32, image_lionc_bits);
  u8g2.setFont(u8g2_font_4x6_tr);
  u8g2.drawStr(40, 53, "LION CIRUITS");
  u8g2.sendBuffer();
  delay(2000);
}

void drawLeft() {
  u8g2.clearBuffer();
  u8g2.drawEllipse(63, 32, 21, 21);
  u8g2.drawXBM(42, 11, 22, 42, image_left_bits);
  u8g2.setDrawColor(2);
  u8g2.setFont(u8g2_font_4x6_tr);
  u8g2.drawStr(45, 35, "LEFT");
  u8g2.sendBuffer();
}

void drawRight() {
  u8g2.clearBuffer();
  u8g2.drawEllipse(65, 32, 21, 21);
  u8g2.drawXBM(66, 11, 22, 42, image_right_bits);
  u8g2.setDrawColor(2);
  u8g2.setFont(u8g2_font_4x6_tr);
  u8g2.drawStr(68, 35, "RIGHT");
  u8g2.sendBuffer();
}

void drawAngle(int angle) {
  u8g2.clearBuffer();
  u8g2.setFont(u8g2_font_profont29_tr);
  String angleStr = String(angle);
  int strWidth = u8g2.getStrWidth(angleStr.c_str());
  int xpos = (128 - strWidth) / 2;
  u8g2.drawStr(xpos, 37, angleStr.c_str());

  u8g2.setFont(u8g2_font_4x6_tr);
  u8g2.drawStr(98, 31, "DEG");

  u8g2.drawFrame(-2, 53, 131, 13);
  u8g2.drawBox(0, 54, map(angle, 0, 180, 0, 128), 12);

  unsigned long elapsed = (millis() - startMillis) / 1000;
  char buf[10];
  sprintf(buf, "%lu SEC", elapsed);
  u8g2.drawStr(8, 61, buf);

  u8g2.sendBuffer();
}

void drawDoneScreen() {
  u8g2.clearBuffer();
  u8g2.setFont(u8g2_font_profont29_tr);
  u8g2.drawStr(30, 38, "DONE!");
  u8g2.sendBuffer();
}

// ----------------------------
// Setup & Loop
// ----------------------------

void setup() {
  u8g2.begin();
  myservo.attach(SERVO_PIN);
  drawBootScreen();
  delay(500);
  startMillis = millis();

  // Left
  drawLeft();
  myservo.write(0);
  delay(1500);

  // Right
  drawRight();
  myservo.write(180);
  delay(1500);

  // Angle test
  int angles[] = {0, 45, 90, 120, 180};
  for (int i = 0; i < 5; i++) {
    myservo.write(angles[i]);
    drawAngle(angles[i]);
    delay(2000);
  }

  // DONE screen
  drawDoneScreen();
}

void loop() {
  // Do nothing after test
}
